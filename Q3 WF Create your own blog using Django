Create your own blog using Django.

django-admin startproject myblog
cd myblog
python manage.py startapp blog

blog/models.py --
from django.db import models
from django.utils import timezone

class Post(models.Model):
    title = models.CharField(max_length=200)
    content = models.TextField()
    pub_date = models.DateTimeField(default=timezone.now)

    def __str__(self):
        return self.title

class Comment(models.Model):
    post = models.ForeignKey(Post, on_delete=models.CASCADE)
    text = models.TextField()
    pub_date = models.DateTimeField(default=timezone.now)

    def __str__(self):
        return f"Comment by {self.post} on {self.pub_date}"

blog/admin.py --
from django.contrib import admin
from .models import Post, Comment

admin.site.register(Post)
admin.site.register(Comment)


python manage.py makemigrations
python manage.py migrate
python manage.py createsuperuser

blog/views.py -->
from django.shortcuts import render, get_object_or_404
from .models import Post

def post_list(request):
    posts = Post.objects.all()
    return render(request, 'blog/post_list.html', {'posts': posts})

def post_detail(request, pk):
    post = get_object_or_404(Post, pk=pk)
    return render(request, 'blog/post_detail.html', {'post': post})


Create HTML templates in the blog/templates/blog directory:
post_list.html:
{% extends 'base_generic.html' %}

{% block content %}
  {% for post in posts %}
    <h1><a href="{% url 'post_detail' pk=post.pk %}">{{ post.title }}</a></h1>
    <p>{{ post.pub_date }}</p>
  {% endfor %}
{% endblock %}

post_detail.html --
{% extends 'base_generic.html' %}

{% block content %}
  <h1>{{ post.title }}</h1>
  <p>{{ post.content }}</p>
  <p>Published on: {{ post.pub_date }}</p>
  <h2>Comments</h2>
  {% for comment in post.comment_set.all %}
    <p>{{ comment.text }} - {{ comment.pub_date }}</p>
  {% endfor %}
{% endblock %}


base_generic.html --
<!DOCTYPE html>
<html>
<head>
  <title>{% block title %}My Blog{% endblock %}</title>
</head>
<body>
  <div id="content">
    {% block content %}{% endblock %}
  </div>
</body>
</html>

blog/urls.py -- 
from django.urls import path
from . import views

urlpatterns = [
    path('', views.post_list, name='post_list'),
    path('post/<int:pk>/', views.post_detail, name='post_detail'),
]

urls.py -- existing urls
from django.contrib import admin
from django.urls import include, path

urlpatterns = [
    path('admin/', admin.site.urls),
    path('blog/', include('blog.urls')),
]

python manage.py runserver
Access the blog at http://127.0.0.1:8000/blog/ and the admin panel at http://127.0.0.1:8000/admin/.
Log in with the superuser credentials to add blog posts and comments.
